/*
 * This file is generated by jOOQ.
 */
package com.github.liamvii.penandpaper.utils.generated.tables.records;


import com.github.liamvii.penandpaper.utils.generated.tables.Archetypes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArchetypesRecord extends UpdatableRecordImpl<ArchetypesRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = -571626264;

    /**
     * Setter for <code>penandpaper.archetypes.ArchetypeID</code>.
     */
    public ArchetypesRecord setArchetypeid(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>penandpaper.archetypes.ArchetypeID</code>.
     */
    public String getArchetypeid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>penandpaper.archetypes.jobID</code>.
     */
    public ArchetypesRecord setJobid(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>penandpaper.archetypes.jobID</code>.
     */
    public String getJobid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>penandpaper.archetypes.archetype</code>.
     */
    public ArchetypesRecord setArchetype(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>penandpaper.archetypes.archetype</code>.
     */
    public String getArchetype() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Archetypes.ARCHETYPES.ARCHETYPEID;
    }

    @Override
    public Field<String> field2() {
        return Archetypes.ARCHETYPES.JOBID;
    }

    @Override
    public Field<String> field3() {
        return Archetypes.ARCHETYPES.ARCHETYPE;
    }

    @Override
    public String component1() {
        return getArchetypeid();
    }

    @Override
    public String component2() {
        return getJobid();
    }

    @Override
    public String component3() {
        return getArchetype();
    }

    @Override
    public String value1() {
        return getArchetypeid();
    }

    @Override
    public String value2() {
        return getJobid();
    }

    @Override
    public String value3() {
        return getArchetype();
    }

    @Override
    public ArchetypesRecord value1(String value) {
        setArchetypeid(value);
        return this;
    }

    @Override
    public ArchetypesRecord value2(String value) {
        setJobid(value);
        return this;
    }

    @Override
    public ArchetypesRecord value3(String value) {
        setArchetype(value);
        return this;
    }

    @Override
    public ArchetypesRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArchetypesRecord
     */
    public ArchetypesRecord() {
        super(Archetypes.ARCHETYPES);
    }

    /**
     * Create a detached, initialised ArchetypesRecord
     */
    public ArchetypesRecord(String archetypeid, String jobid, String archetype) {
        super(Archetypes.ARCHETYPES);

        set(0, archetypeid);
        set(1, jobid);
        set(2, archetype);
    }
}
