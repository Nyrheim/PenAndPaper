/*
 * This file is generated by jOOQ.
 */
package com.github.liamvii.penandpaper.utils.generated;


import com.github.liamvii.penandpaper.utils.generated.tables.Archetypes;
import com.github.liamvii.penandpaper.utils.generated.tables.Characters;
import com.github.liamvii.penandpaper.utils.generated.tables.Jobs;
import com.github.liamvii.penandpaper.utils.generated.tables.Professions;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>penandpaper</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ARCHETYPES_FKIDX_57 = Indexes0.ARCHETYPES_FKIDX_57;
    public static final Index CHARACTERS_FKIDX_18 = Indexes0.CHARACTERS_FKIDX_18;
    public static final Index JOBS_FKIDX_41 = Indexes0.JOBS_FKIDX_41;
    public static final Index PROFESSIONS_FKIDX_46 = Indexes0.PROFESSIONS_FKIDX_46;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ARCHETYPES_FKIDX_57 = Internal.createIndex("fkIdx_57", Archetypes.ARCHETYPES, new OrderField[] { Archetypes.ARCHETYPES.JOBID }, false);
        public static Index CHARACTERS_FKIDX_18 = Internal.createIndex("fkIdx_18", Characters.CHARACTERS, new OrderField[] { Characters.CHARACTERS.UUID }, false);
        public static Index JOBS_FKIDX_41 = Internal.createIndex("fkIdx_41", Jobs.JOBS, new OrderField[] { Jobs.JOBS.CHARACTERID }, false);
        public static Index PROFESSIONS_FKIDX_46 = Internal.createIndex("fkIdx_46", Professions.PROFESSIONS, new OrderField[] { Professions.PROFESSIONS.CHARACTERID }, false);
    }
}
