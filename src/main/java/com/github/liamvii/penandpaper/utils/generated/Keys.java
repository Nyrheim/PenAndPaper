/*
 * This file is generated by jOOQ.
 */
package com.github.liamvii.penandpaper.utils.generated;


import com.github.liamvii.penandpaper.utils.generated.tables.Archetypes;
import com.github.liamvii.penandpaper.utils.generated.tables.Characterholders;
import com.github.liamvii.penandpaper.utils.generated.tables.Characters;
import com.github.liamvii.penandpaper.utils.generated.tables.Jobs;
import com.github.liamvii.penandpaper.utils.generated.tables.Professions;
import com.github.liamvii.penandpaper.utils.generated.tables.records.ArchetypesRecord;
import com.github.liamvii.penandpaper.utils.generated.tables.records.CharacterholdersRecord;
import com.github.liamvii.penandpaper.utils.generated.tables.records.CharactersRecord;
import com.github.liamvii.penandpaper.utils.generated.tables.records.JobsRecord;
import com.github.liamvii.penandpaper.utils.generated.tables.records.ProfessionsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>penandpaper</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ArchetypesRecord> KEY_ARCHETYPES_PRIMARY = UniqueKeys0.KEY_ARCHETYPES_PRIMARY;
    public static final UniqueKey<CharacterholdersRecord> KEY_CHARACTERHOLDERS_PRIMARY = UniqueKeys0.KEY_CHARACTERHOLDERS_PRIMARY;
    public static final UniqueKey<CharactersRecord> KEY_CHARACTERS_PRIMARY = UniqueKeys0.KEY_CHARACTERS_PRIMARY;
    public static final UniqueKey<JobsRecord> KEY_JOBS_PRIMARY = UniqueKeys0.KEY_JOBS_PRIMARY;
    public static final UniqueKey<ProfessionsRecord> KEY_PROFESSIONS_PRIMARY = UniqueKeys0.KEY_PROFESSIONS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ArchetypesRecord, JobsRecord> FK_57 = ForeignKeys0.FK_57;
    public static final ForeignKey<CharactersRecord, CharacterholdersRecord> FK_18 = ForeignKeys0.FK_18;
    public static final ForeignKey<JobsRecord, CharactersRecord> FK_41 = ForeignKeys0.FK_41;
    public static final ForeignKey<ProfessionsRecord, CharactersRecord> FK_46 = ForeignKeys0.FK_46;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<ArchetypesRecord> KEY_ARCHETYPES_PRIMARY = Internal.createUniqueKey(Archetypes.ARCHETYPES, "KEY_archetypes_PRIMARY", new TableField[] { Archetypes.ARCHETYPES.ARCHETYPEID }, true);
        public static final UniqueKey<CharacterholdersRecord> KEY_CHARACTERHOLDERS_PRIMARY = Internal.createUniqueKey(Characterholders.CHARACTERHOLDERS, "KEY_characterholders_PRIMARY", new TableField[] { Characterholders.CHARACTERHOLDERS.UUID }, true);
        public static final UniqueKey<CharactersRecord> KEY_CHARACTERS_PRIMARY = Internal.createUniqueKey(Characters.CHARACTERS, "KEY_characters_PRIMARY", new TableField[] { Characters.CHARACTERS.CHARACTERID }, true);
        public static final UniqueKey<JobsRecord> KEY_JOBS_PRIMARY = Internal.createUniqueKey(Jobs.JOBS, "KEY_jobs_PRIMARY", new TableField[] { Jobs.JOBS.JOBID }, true);
        public static final UniqueKey<ProfessionsRecord> KEY_PROFESSIONS_PRIMARY = Internal.createUniqueKey(Professions.PROFESSIONS, "KEY_professions_PRIMARY", new TableField[] { Professions.PROFESSIONS.PROFESSIONID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ArchetypesRecord, JobsRecord> FK_57 = Internal.createForeignKey(Keys.KEY_JOBS_PRIMARY, Archetypes.ARCHETYPES, "FK_57", new TableField[] { Archetypes.ARCHETYPES.JOBID }, true);
        public static final ForeignKey<CharactersRecord, CharacterholdersRecord> FK_18 = Internal.createForeignKey(Keys.KEY_CHARACTERHOLDERS_PRIMARY, Characters.CHARACTERS, "FK_18", new TableField[] { Characters.CHARACTERS.UUID }, true);
        public static final ForeignKey<JobsRecord, CharactersRecord> FK_41 = Internal.createForeignKey(Keys.KEY_CHARACTERS_PRIMARY, Jobs.JOBS, "FK_41", new TableField[] { Jobs.JOBS.CHARACTERID }, true);
        public static final ForeignKey<ProfessionsRecord, CharactersRecord> FK_46 = Internal.createForeignKey(Keys.KEY_CHARACTERS_PRIMARY, Professions.PROFESSIONS, "FK_46", new TableField[] { Professions.PROFESSIONS.CHARACTERID }, true);
    }
}
