plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id 'nu.studer.jooq' version '4.2'
}

group = "com.github.liamvii.penandpaper"
version = "0.1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
}

dependencies {
    implementation group: "org.bukkit", name: "bukkit", version: "1.15.2-R0.1-SNAPSHOT"
    implementation group: "mysql", name: "mysql-connector-java", version: "8.0.20"
    implementation group: "com.zaxxer", name: "HikariCP", version: "3.4.5"
    implementation group: "com.typesafe", name: "config", version: "1.4.0"
    implementation group: "org.jooq", name: "jooq", version: "3.14.0-SNAPSHOT"
    implementation group: "org.jooq", name: "jooq-meta", version: "3.14.0-SNAPSHOT"
    implementation group: "org.jooq", name: "jooq-codegen", version: "3.14.0-SNAPSHOT"
    jooqRuntime 'mysql:mysql-connector-java:8.0.20'
}
import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filter ReplaceTokens, tokens: [
            "version": version
    ]
}

jooq {
    version = '3.13.1'
    edition = 'OSS'
    generateSchemaSourceOnCompilation = true
    PenandPaper(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.cj.jdbc.Driver'
            url = 'jdbc:mysql://localhost:3306/penandpaper'
            user = 'root'
            password = 'HelioStaten4@21!'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'penandpaper'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                    }
                    forcedType {
                        name = 'varchar'
                    }
                }
                // ...
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
                // ...
            }
            target {
                packageName = 'nu.studer.sample'
                // directory = ...
            }
        }
    }
}

shadowJar {
    dependencies {
        include(dependency("mysql:mysql-connector-java"))
        include(dependency("com.google.protobuf:protobuf-java"))
        include(dependency("com.zaxxer:HikariCP:3.4.5"))
        include(dependency("com.typesafe:config:1.4.0"))
        include(dependency("org.jooq:jooq:3.14.0-SNAPSHOT"))
        include(dependency("org.jooq:jooq-meta:3.14.0-SNAPSHOT"))
        include(dependency("org.jooq:jooq-codegen:3.14.0-SNAPSHOT"))
    }
    relocate "com.mysql", "com.github.liamvii.penandpaper.shadow.com.mysql"
    relocate "com.google", "com.github.liamvii.penandpaper.shadow.com.google"
    relocate "google", "com.github.liamvii.penandpaper.shadow.google"
    relocate "com.zaxxer", "com.github.liamvii.penandpaper.shadow.com.zaxxer"
    relocate "com.typesafe", "com.github.liamvii.penandpaper.shadow.com.typesafe"
}

tasks.build.dependsOn tasks.shadowJar

